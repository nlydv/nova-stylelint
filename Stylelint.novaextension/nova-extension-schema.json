{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://nova.app/extension-manifest.schema.json",
    "title": "Nova Extension Manifest",
    "description": "This file defines the fundamental metadata and components of a Nova extension and how it integrates with the IDE.",
    "type": "object",
    "properties": {
        "activationEvents": {
            "description": "Set of Activation Events",
            "type": "array",
            "items": { "type": "string" }
        },
        "bugs": {
            "description": "URL to the extension’s bug reporter",
            "type": "string"
        },
        "categories": {
            "description": "An array of Category identifiers",
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "clips",
                    "commands",
                    "completions",
                    "formatters",
                    "issues",
                    "key-bindings",
                    "languages",
                    "sidebars",
                    "tasks",
                    "themes"
                ]
            }
        },
        "commands": {
            "description": "User-invokable commands can be added to the menus and command palette, optionally with keyboard key-equivalents. These commands invoke a callback registered in the JavaScript execution environment of the extension.",
            "type": "object",
            "properties": {
                "editor": {
                    "description": "Groups commands that appear within the Editor menu for text documents",
                    "$ref": "#/definitions/commandList"
                },
                "extensions": {
                    "description": "Groups commands that appear within the Extensions menu for the workspace",
                    "$ref": "#/definitions/commandList"
                },
                "command-palette": {
                    "description": "Groups commands that should only appear within the Command Palette",
                    "$ref": "#/definitions/commandList"
                }
            }
        },
        "config": {
            "description": "Set of global Preferences",
            "type": [ "string", "array" ],
            "items": {
                "$ref": "#/definitions/configItem"
            }
        },
        "configWorkspace": {
            "description": "Set of workspace (project-specific) Preferences",
            "type": [ "string", "array" ],
            "items": {
                "$ref": "#/definitions/configItem"
            }
        },
        "description": {
            "description": "The user-readable descriptive text",
            "type": "string"
        },
        "entitlements": {
            "description": "Description of an extension’s Entitlements",
            "type": "object",
            "properties": {
                "clipboard": {
                    "description": "Provides access to the Clipboard API.",
                    "type": "boolean"
                },
                "filesystem": {
                    "description": "Provides access to the FileSystem and related APIs to read and/or write to files on disk (Note: this entitlement is not required to access the open documents within the IDE)",
                    "type": "string",
                    "enum": ["readonly", "readwrite"]
                },
                "requests": {
                    "description": "Provides access to the Fetch API to perform asynchronous HTTP network requests",
                    "type": "boolean"
                },
                "process": {
                    "description": "Provides access to the Process API to launch and communciate with external tools",
                    "type": "boolean"
                }
            }
        },
        "funding": {
            "description": "A string or object describing the URL to the extension’s issue tracker",
            "anyOf": [
                {
                    "type": "string",
                    "description": "This represents the URL"
                },
                {
                    "type": "object",
                    "description": "It is generally preferred to use a URL value of some type over an email address / mailto: link",
                    "properties": {
                        "url": {
                            "type": "string",
                            "description": "A string representing the URL"
                        },
                        "email": {
                            "type": "string",
                            "description": "An email address that will be the target of a `mailto:` link"
                        }
                    }
                }
            ]
        },
        "homepage": {
            "description": "URL to the extension’s homepage, if any",
            "type": "string"
        },
        "identifier": {
            "description": "The unique extension identifier",
            "type": "string"
        },
        "issueMatchers": {
            "description": "Set of Issue Matchers provided to the IssueParser API. Each issue matcher object is keyed with an identifier (in this case, my-issue-matcher) which is used with the IssueParser constructor API. This value must be unique within a single extension.",
            "type": "object",
            "patternProperties": {
                "^.*$": {
                    "type": "object",
                    "properties": {
                        "pattern": {
                            "description": "Defines one or more objects that are used as pattern matchers (regular expressions). If one object is provided, it is the sole pattern used. If an array object is provided, each pattern will be matched successively (if the first fails, it matcher will stop). This allows matching more complex, multi-line output.",
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/issueMatcherPattern"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/issueMatcherPattern"
                                    }
                                }
                            ]
                        },
                        "linesStartAt1": {
                            "description": "Whether line numbers captured by the matcher are 1-indexed (true by default). If false, then line numbers will be assumed to be zero-indexed and are automatically incremented for display.",
                            "type": "boolean"
                        },
                        "columnsStartAt1": {
                            "description": "whether column numbers captured by the matcher are 1-indexed (true by default). If false, then line numbers will be assumed to be zero-indexed and are automatically incremented for display.",
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "license": {
            "description": "The name of the extension’s license, if any",
            "type": "string"
        },
        "max_runtime": {
            "description": "The maximum runtime supported",
            "type": "string",
            "pattern": "\\d+\\.\\d+"
        },
        "min_runtime": {
            "description": "The minimum runtime supported",
            "type": "string",
            "pattern": "\\d+\\.\\d+"
        },
        "name": { "description": "The user-readable name", "type": "string" },
        "organization": {
            "description": "The user-readable organization name",
            "type": "string"
        },
        "repository": {
            "description": "URL to the extension’s source repository, if any",
            "type": "string"
        },
        "version": { "description": "The extension version", "type": "string" },
        "main": {
            "description": "Relative path to the extension’s Main Script",
            "type": "string"
        },
        "sidebars": {
            "description": "Set of Sidebars provided to the TreeView API",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the sidebar. This must be unique within the scope of the extension (two sidebars may have the same identifier if they are in different extensions).",
                        "type": "string"
                    },
                    "name": {
                        "description": "The user readable name of the sidebar. This value is automatically localized when shown.",
                        "type": "string"
                    },
                    "smallImage": {
                        "description": "The name of an image to use when the sidebar dock is in Small mode. These icons should use a 16px base size (32px for 2x resources)",
                        "type": "string"
                    },
                    "smallSelectedImage": {
                        "description": "The name of an image to use when the sidebar dock is in Small mode and the sidebar is selected. If not specified, the smallImage value will be used. These icons should use a 16px base size (32px for 2x resources)",
                        "type": "string"
                    },
                    "largeImage": {
                        "description": "The name of an image to use when the sidebar dock is in Large mode. These icons should use a 24px base size (48px for 2x resources)",
                        "type": "string"
                    },
                    "largeSelectedImage": {
                        "description": "The name of an image to use when the sidebar dock is in Large mode. If not specified, the largeImage value will be used. These icons should use a 24px base size (48px for 2x resources)",
                        "type": "string"
                    },
                    "sections": {
                        "description": "An array of section definitions defining the content of the sidebar",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "The unique identifier of the section. This must be unique within the sidebar, but does not need to be unique otherwise.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The user readable name of the section, shown in its header. If not specified, the section header may be omitted if no headerCommands are also specified. This value is automatically localized when shown.",
                                    "type": "string"
                                },
                                "allowMultiple": {
                                    "description": "Whether the tree shown within the section allows multiple selection.",
                                    "type": "boolean"
                                },
                                "placeholderImage": {
                                    "description": "The name of an image to display if the section has no content. These icons should use a 24px base size (48px for 2x resources).",
                                    "type": "string"
                                },
                                "placeholderText": {
                                    "description": "A label to display if the section has no content. This value is automatically localized when shown.",
                                    "type": "string"
                                },
                                "headerCommands": {
                                    "description": "An array of Command definitions that will be shown as buttons in the header of the section. These buttons may be enabled and disabled using the when clause of the command.",
                                    "type": "array",
                                    "items": {
                                        "allOf": [
                                            { "$ref": "#/definitions/command" },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "image": {
                                                        "description": "Path to an image to display as a button to invoke this command",
                                                        "type": "string"
                                                    },
                                                    "tooltip": {
                                                        "description": "Tooltip to be displayed when hovering over button",
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "contextualCommands": {
                                    "description": "An array of Command definitions that will be shown in the contextual menu of the sidebar. These buttons may be enabled and disabled using the when clause of the command.",
                                    "$ref": "#/definitions/commandList"
                                }
                            }
                        },
                        "minItems": 1,
                        "required": ["id"]
                    }
                },
                "required": ["id", "name", "sections"]
            }
        },
        "taskTemplates": {
            "description": "Set of Task Templates",
            "type": "object",
            "patternProperties": {
                "^.*$": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "description": "The user-readable name of the task",
                            "type": "string"
                        },
                        "description": {
                            "description": "The user-readable descriptive text of the task",
                            "type": "string"
                        },
                        "persistent": {
                            "type": "boolean"
                        },
                        "task": {
                            "type": "object",
                            "properties": {
                                "command": {
                                    "description": "The executable command to invoke",
                                    "type": "string"
                                },
                                "shell": {
                                    "description": "If true, the command will be executed within a shell",
                                    "type": "boolean"
                                },
                                "args": {
                                    "description": "An array of interpolated strings passed to the command",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "env": {
                                    "description": "Interpolated environment variables set for the command",
                                    "type": "object",
                                    "patternProperties": {
                                        "[a-zA-Z_]+[a-zA-Z0-9_]*": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": ["command"]
                        },
                        "config": {
                            "$ref": "#/definitions/configItemList"
                        }
                    }
                }
            }
        }
    },
    "required": [
        "bugs",
        "categories",
        "description",
        "identifier",
        "name",
        "organization",
        "version"
    ],
    "definitions": {
        "commandList": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/command"
            }
        },
        "command": {
            "type": "object",
            "properties": {
                "title": {
                    "description": "The visible name of the command within menus",
                    "type": "string"
                },
                "paletteTitle": {
                    "description": "The visible name of the command within the command palette. If not specified, the title will be used.",
                    "type": "string"
                },
                "command": {
                    "description": "The name of the handler registered with the nova.commands registry.",
                    "type": "string"
                },
                "shortcut": {
                    "description": "The key binding to set for the command, if not conflicting. Any standard keycode is allowed, provided at least one non-shift \"modifier\" key is provided. Modifiers are specified as cmd, opt, ctrl, and shift.",
                    "type": "string"
                },
                "when": {
                    "description": "An expression defining under what circumstances the command is available.",
                    "type": "string"
                },
                "filters": {
                    "description": "A object defining more complex filters by which to determine if a command is available. These are often simpler than a complex when \"expression\".",
                    "type": "object",
                    "properties": {
                        "syntaxes": {
                            "description": "An array of syntax names for which the command is valid",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "types": {
                            "description": "An array of file types for which the command is valid (file extensions or Uniform Type Identifiers)",
                            "type": "array",
                            "items": { "type": "string" }
                        }
                    }
                }
            },
            "required": ["title", "command"]
        },
        "configItemList": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/configItem"
            }
        },
        "configItem": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "The configuration key by which the value is stored and referenced",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the item, affecting which user interface controls are used",
                    "type": "string",
                    "enum": [
                        "boolean",
                        "string",
                        "path",
                        "number",
                        "enum",
                        "text",
                        "section",
                        "command",
                        "stringArray",
                        "pathArray"
                    ]
                },
                "required": {
                    "description": "Whether the item requires a value to validate (default is false)",
                    "type": "boolean",
                    "default": "false"
                },
                "title": {
                    "description": "The user-readable title of the item (this will be automatically localized)",
                    "type": "string"
                },
                "description": {
                    "description": "The user-readable descriptive text of the item (this will be automatically localized)",
                    "type": "string"
                },
                "link": {
                    "description": "A URL string that will be opened when clicking the item’s help (?) button",
                    "type": "string"
                },
                "placeholder": {
                    "description": "Placeholder text displayed within the item’s text field if no value is set",
                    "type": "string"
                },
                "default": { "description": "The default value of the item" },
                "children": {
                    "description": "Child items displayed beneath and indented from the item (section types only)",
                    "$ref": "#/definitions/configItemList"
                },
                "max": {
                    "description": "The maximum value of the item (number types only)",
                    "type": "number"
                },
                "min": {
                    "description": "The minimum value of the item (number types only)",
                    "type": "number"
                },
                "allowsCustom": {
                    "description": "Whether the item supports custom text values to be entered (enum types only)",
                    "type": "boolean"
                },
                "radio": {
                    "description": "Whether the item should prefer being displayed using radio buttons when possible (enum types only)",
                    "type": "boolean"
                },
                "command": {
                    "description": "A command name registered with the CommandsRegistry to be invoked when clicking the item’s button (command types only)",
                    "type": "string"
                },
                "regex": {
                    "description": "A regular expression pattern that will be used for validating the item (string types only)",
                    "type": "string"
                },
                "values": {
                    "description": "An array of pre-populated values to display for an item (enum types only). See Enum Values for more information.",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            { "type": "string" },
                            {
                                "type": "array",
                                "items": [
                                    { "type": ["string", "null"] },
                                    { "type": "string" }
                                ]
                            }
                        ]
                    }
                },
                "resolve": {
                    "description": "A command name registered with the CommandsRegistry that will be invoked when the item is shown to resolve the array of pre-populated values (enum types only). See Enum Values for more information.",
                    "type": "string"
                },
                "allowFiles": {
                    "description": "Whether the item allows choosing files from open panels (path types only, default is true)",
                    "type": "boolean"
                },
                "allowFolders": {
                    "description": "Whether the item allows choosing folders from open panels (path types only, default is false)",
                    "type": "boolean"
                },
                "relative": {
                    "description": "Whether the item prefers relative paths when choosing paths from open panels (path types only, default is false)",
                    "type": "boolean"
                },
                "filetype": {
                    "description": "An array of strings that denotes the type of files (by extension or Uniform Type Identifier) that are valid for choosing in open panels (path types only)",
                    "type": "array",
                    "items": { "type": "string" }
                }
            },
            "required": ["type"]
        },
        "issueMatcherPattern": {
            "type": "object",
            "properties": {
                "regexp": {
                    "description": "a regular expression string defining captures for parsing",
                    "type": "string"
                },
                "message": {
                    "description": "a capture number for the user-readable message that should be displayed to the user",
                    "type": "number"
                },
                "line": {
                    "description": "a capture number for the line number where the issue begins",
                    "type": "number"
                },
                "column": {
                    "description": "a capture number for the column number where the issue begins (optional)",
                    "type": "number"
                },
                "endLine": {
                    "description": "a capture number for the line number where the issue begins (optional)",
                    "type": "number"
                },
                "endColumn": {
                    "description": "a capture number for the column number where the issue begins (optional)",
                    "type": "number"
                },
                "code": {
                    "description": "a capture number for the issue code, which may be a string or integer and is implementation dependent (such as T_PHP_PARSE_ERROR) (optional)",
                    "anyOf": [
                        { "type": "number" },
                        { "type": "string" }
                    ]
                },
                "severity": {
                    "description": "the severity of the issue.\n\nIf provided with an capture number, the parser will search for case-insensitive combinations of the following strings: “warn”, “warning”, “err”, “error”\nIf provided with a string (“warning” or “error”), that severity will always be used for this matcher\nIf not provided, “warning” will be assumed",
                    "anyOf": [
                        { "type": "number" },
                        { "type": "string" }
                    ]
                },
                "loop": {
                    "description": "whether the pattern should be “looped”, matching successive lines of output until the pattern no longer matches. This allows patterns to match output for a single issue that spans multiple lines.",
                    "type": "boolean"
                }
            },
            "required": ["regexp", "message", "line", "severity"]
        }
    }
}
